snippet <d
<div${1}>
	${0}
</div>
endsnippet

snippet row
<div className="flex flex-row${1}">
	${0}
</div>
endsnippet

snippet col
<div className="flex flex-col${1}">
	${0}
</div>
endsnippet

snippet jc
justify-center
endsnippet

snippet ic
items-center
endsnippet

snippet <s
<span${1}>
	${0}
</span>
endsnippet

snippet cl
className="${0}"
endsnippet

snippet cls
className={classnames(${0})}
endsnippet

snippet <L
<Link to="${1}">
	${0}
</Link>
endsnippet

snippet us
const [${1}] = useState();${0}
endsnippet

snippet ur
const ${1} = useRef();${0}
endsnippet

snippet um
const ${1} = useMemo(() => ${2}, [${3}]);${0}
endsnippet

snippet ucb
const ${1} = useCallback((${2}) => ${3}, [${4}]);${0}
endsnippet

snippet ue
useEffect(() => {
	${0}
}, [${1}]);
endsnippet

snippet ucon
const { ${1} } = useContext(${2});${0}
endsnippet

snippet open
const ${1} = () => openUrl(${2});${0}
endsnippet

snippet tr
trackEvent({
	category: ${1},
	action: ${2},
	label: ${3}
});${0}
endsnippet

snippet <b
<button type="${1:button}" className="btn btn-${2:primary}${3}" onClick={${3}}>${0}</button>
endsnippet

snippet <h1
<h1 className="text-black h1 font-semibold text-4xl${1}">
	${0}
</h1>
endsnippet

snippet <p
<p className="text-grey-paragraph${1}">
	${0}
</p>
endsnippet

snippet jmr
jest.mock('react', () => ({
	...jest.requireActual('react'),
	useEffect: jest.fn(),
}));
endsnippet
