snippet <d
	<div${1}>
		${0}
	</div>
snippet row
	<div className="flex flex-row${1}">
		${0}
	</div>
snippet col
	<div className="flex flex-col${1}">
		${0}
	</div>
snippet jc
	justify-center
snippet ic
	items-center
snippet <s
	<span${1}>
		${0}
	</span>
snippet cl
	className="${0}"
snippet cls
	className={classnames(${0})}
snippet <L
	<Link to="${1}">
		${0}
	</Link>
snippet us
	const [${1}] = useState();${0}
snippet ur
	const ${1} = useRef();${0}
snippet um
	const ${1} = useMemo(() => ${2}, [${3}]);${0}
snippet ucb
	const ${1} = useCallback((${2}) => ${3}, [${4}]);${0}
snippet ue
	useEffect(() => {
		${0}
	}, [${1}]);
snippet ucon
	const { ${1} } = useContext(${2});${0}
snippet open
	const ${1} = () => openUrl(${2});${0}
snippet tr
	trackEvent({
		category: ${1},
		action: ${2},
		label: ${3}
	});${0}
snippet <b
	<button type="${1:button}" className="btn btn-${2:primary}${3}" onClick={${3}}>${0}</button>
snippet <h1
	<h1 className="text-black h1 font-semibold text-4xl${1}">
		${0}
	</h1>
snippet <p
	<p className="text-grey-paragraph${1}">
		${0}
	</p>
snippet jmr
	jest.mock('react', () => ({
		...jest.requireActual('react'),
		useEffect: jest.fn(),
	}));
snippet ujm
	(useEffect as jest.Mock).mockImplementation((fn) => fn());
