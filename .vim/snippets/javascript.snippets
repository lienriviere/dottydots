snippet $s
	$scope.${1} = function (${2}) {
		${0}
	};
snippet $r
	$rootScope.$apply()
snippet cont
	angular.module('app').controller('${1}', function(${2}) {
		${0}
	});
snippet serv
	angular.module('app').factory('${1}', function(${2}) {
		var service = {
			${0}
		};

		return service;
	});
snippet dir
	angular.module('app').directive('${1}', function(${2}) {
		return {
			link: function($scope, $element, $attributes) {
				${0}
			}
		};
	});
snippet comp
	angular.module('app').directive('${1}', function(${2}) {
		return {
			restrict: 'E',
			templateUrl: 'components/${3}.html',
			controller: '${4}ComponentController',
			scope: ${5}
		};
	});
snippet con
	console.log('${1}:', ${2});${0}
snippet m
	module.exports = ${0}
snippet e
	exports.${1} = ${0}
snippet route
	function (req, res, next) {
		${0}
	}
snippet proto
	${1}.prototype.${2} = function(${3}) {
		${0}
	};
snippet _.r
	_.reduce(${1}, function(memo, ${2:item}) {
		${3}
		return memo;
	}, ${4:[]});${0}
snippet _.e
	_.each(${1}, function(${2:item}) {
		${0}
	});
snippet _.g
	_.get(${1}, '${2}');${0}
snippet _.s
	_.set(${1}, '${2}', ${3});${0}
snippet async.e
	async.each(${1}, function(${2:item}, next) {
		${3}
	}, function(err) {
		${4}
	}
snippet f
	function(${2}) {
		${0}
	}${1}
snippet for
	for (var i = 0; i < ${1}.length; i++) {
		${0}
	}
snippet r
	require('${1}')${0}
snippet d
	describe('${1}', () => {
		${0}
	})
snippet c
	context('${1}', () => {
		${0}
	})
snippet it
	it('${1}', (${2}) => {
		${0}
	})
snippet sub
	subject = require('proxyquire').noCallThru()('${1}')${0}
snippet b
	beforeEach(function(${1}) {
		${0}
	})
snippet a
	afterEach(function(${1}) {
		${0}
	})
snippet sin
	sinon.stub(${1})${0}
snippet cal
	called${1}.should.be.${2}()${0}
snippet calledw
	calledWith(${1}).should.be.${2}()${0}
snippet im
	import ${1} from ${0}
snippet ex
	export default class ${1} extends React.Component {
		render() {
			return (
				${0}
			)
		}
	}
snippet (
	(${1}) => {${0}
